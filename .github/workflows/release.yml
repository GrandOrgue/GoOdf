name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  BUILD_TYPE: Release

jobs:
  build-linux:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3

    - name: Get dependencies
      run: sudo apt-get install -y build-essential cmake libwxgtk3.0-gtk3-dev imagemagick

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Package
      working-directory: ${{github.workspace}}/build
      run: cpack

    - uses: actions/upload-artifact@v3
      with:
        name: GOODF-${{github.ref_name}}-linux
        path: ${{github.workspace}}/build/GOODF*.tar.gz

  build-cross-windows:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3

    - name: Cache wxCrossbuild
      id: cache-wxcross
      uses: actions/cache@v3
      with:
        path: ${{github.workspace}}/wxCross
        key: wxCrossbuild

    - name: Get dependencies
      run: sudo apt-get install -y wget build-essential cmake pkg-config libwxgtk3.0-gtk3-dev gcc-mingw-w64-i686 g++-mingw-w64-i686 imagemagick

    - name: Cross compile wxWidgets
      if: steps.cache-wxcross.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/wxWidgets/wxWidgets/releases/download/v3.2.2.1/wxWidgets-3.2.2.1.tar.bz2
        tar -xf wxWidgets-3.2.2.1.tar.bz2
        mkdir wxCross
        cd wxWidgets-3.2.2.1
        mkdir win-ur-static
        cd win-ur-static
        ../configure --host=i686-w64-mingw32 --build=i686-linux --prefix=${{github.workspace}}/wxCross --enable-unicode --disable-shared
        make
        make install
        cd ..
        cd ..

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/crossbuild -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=toolchain.def

    - name: Build
      run: cmake --build ${{github.workspace}}/crossbuild --config ${{env.BUILD_TYPE}}

    - name: Package
      working-directory: ${{github.workspace}}/crossbuild
      run: cpack

    - uses: actions/upload-artifact@v3
      with:
        name: GOODF-${{github.ref_name}}-windows
        path: ${{github.workspace}}/crossbuild/GOODF*.zip

  release:
    needs: [ build-linux, build-cross-windows ]
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: actions/download-artifact@v3
      with:
        name: GOODF-${{github.ref_name}}-linux
        path: ${{github.workspace}}

    - uses: actions/download-artifact@v3
      with:
        name: GOODF-${{github.ref_name}}-windows
        path: ${{github.workspace}}

    - name: Get dependencies
      run: sudo apt-get install -y unzip

    - name: Unzip downloads
      run: |
        unzip ${{github.workspace}}/GOODF-${{github.ref_name}}-linux
        unzip ${{github.workspace}}/GOODF-${{github.ref_name}}-windows.zip

    - name: Populate Release
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        prerelease: false
        body: Relsease files created from GitHub action runners.
        files: |
          ${{github.workspace}}/GOODF-${{github.ref_name}}-linux.x86_64.tar.gz
          ${{github.workspace}}/GOODF-${{github.ref_name}}-windows.x86.zip
